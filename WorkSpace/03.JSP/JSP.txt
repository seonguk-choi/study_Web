○ JSP(Java Server Page) ▶ View : WebContent > New > JSP File
	- HTML 코드에 JAVA 코드를 삽입해서 만든 페이지
	- 서버측에서 동작되는 언어
	- 확장자는 *.jsp
	- 동작방식 : 컴파일 과정을 거쳐야 하므로 최초 실행은 느리다.
		① test.jsp 페이지가 서블릿으로 변경 : test_jsp.java(서블릿) ▶ POJO(순수 자바코드)
		② test_jsp.java 파일이 컴파일 : test_jsp.class(클래스)
		③ test_jsp.class 바이트 코드가 실행
		D:\Study_Web\workspace\.metadata\.plugins\org.eclipse.wst.server.core
								\tmp0\work\Catalina\localhost\m\org\apache\jsp
								
★ JSP 구성요소
1. 스크립적인 요소(프로그래밍적인 요소)
	① 스크립틀릿 : 가장 많이 사용하는 요소
		- <% 자바코드 %>
		
	② 지시자 : MIME Type, import, JSTL
		- <%@ page contentType = "text/html; charset=utf-8" %>
		- <%@ page import = "com.hanul.study.MemberDTO" %>
		- <%@ taglib prefix = "c"  uri = "http://java.sun.com/jsp/jstl/core" %>
	
	③ 선언문 : 메소드 정의 → 별도의 클래스에 구현
		- <%! public void 메소드명(매개변수) { ~~코드구현~~ } %>
		
	④ 표현식 : 값을 출력
		- <%= 변수명 %>
		- <%= 수식 %>
		- <%= 메소드 호출문 %>
		
	⑤ 주석 : 문서(코드)에 대한 보충 설명 → 컴파일 되지 않는다.
		- <%-- 설명 --%> : JSP 주석 ▶ 소스보기를 하면 출력이 안된다.
		- <!-- 설명 --> : html 주석 ▶ 소스보기를 하면 주석의 내용이 출력된다.

2. UI요소(화면구현 요소)
	⑥ html
	⑦ css
	⑧ javascript, jQuery	
		
★ JSP Action Tag : 프로그래밍적인 요소 → 태그적인 요소
	- <jsp : useBean ~~ /> : 객체를 생성하는 태그
	- <jsp : setProperty ~~ /> : DTO 객체에 있는 setter method 호출
	- <jsp : getProperty ~~ /> : DTO 객체에 있는 getter method 호출
	- <jsp : forward ~~ /> : forward() 방식으로 동적페이지 전환
	- <jsp : include ~~ /> : 특정 페이지를 포함한다.
		# <%@ include file="~~.jsp" %> ▶ 지시자
		# <jsp : include page="~~.jsp"/> ▶ Action Tag

★ Scope : 공유범위
1. pageContext scope
	- pageContext 내장객체를 이용하여 바인딩(연결) 객체를 공유
	- 객체를 만든(setAttribute()) jsp 페이지(현재 페이지)에서만 사용 가능
	
2. request scope
	- request 내장객체를 이용하여 바인딩(연결) 객체를 공유
	- 객체를 만든 jsp 페이지(현재 페이지)와 요청(forward())한 jsp 페이지에서만 사용 가능
	
3. session scope
	- session 내장객체를 이용하여 바인딩(연결) 객체를 공유
	- 모든 jsp 페이지에서 사용 가능
	- 세션 속성값을 설정하여 지정한 시간 또는 웹브라우저가 열려 있는 동안만 사용 가능
	
4. application scope
	- application 내장객체를 이용하여 바인딩(연결) 객체를 공유
	- 모든 jsp 페이지에서 사용 가능
	- 웹브라우저가 종료되어도 서버가 중지되기전까지 사용 가능
	
★ EL(Expression Language) 문법(표현식)
	○ 기본형식 ▶ ${ 출력값 } : 출력값은 아래와 같이 다양한 형태로 표현 가능
		- ${ param.변수이름 } : jsp20, jsp24, jsp25, jsp26
		- ${ 객체이름.속성이름 } : jsp20, jsp28
		- ${ 속성이름 } : jsp21, jsp22
		- ${ paramValues.배열이름[인덱스] } : jsp23, jsp24
		- ${ 수식(계산식, 비교연산) } : jsp25, jsp26
		- ${ 배열이름[인덱스] } : jsp27, jsp28
		- ${ 배열이름[인덱스].속성이름 } : jsp27, jsp28

★ JSTL(JSP Standard Tag Library)
	○ JSP 스크립틀릿 안에서 프로그래밍했던 코드를 태그형태로 변환해주는 라이브러리
	
	○ JSTL 라이브러리 설치(등록)하기
		- Apache Tomcat(http://tomcat.apache.org) > Download > Taglibs
		- Standard-1.2.5 > Jar Files : Impl, Spec, EL, Compat 4개 다운로드(D:\개발자프로그램\JSTL)
		- D:\개발자프로그램\JSTL 복사 후 WebContent > WEB-INF > lib 붙여넣기
		
	○ JSTL Tag 종류 : JSP 문서 상단에 지시자를 작성 할 것!
		- 기본프로그래밍 Tag : 변수, 배열, 조건문(if), 반복문(for) 등 ▶ core
			<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
			
		- 국제화(포맷팅) Tag : 날짜, 시간, 숫자, 통화기호 등 표시형식 ▶ format
			<%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>
			
		- 함수 Tag : JAVA에서 String Class에서 제공하는 메소드 ▶ function
			<%@ taglib prifix="fn" uri="http://java.sun.com/jsp/jstl/functions" %>
			
			
			
			
			
			